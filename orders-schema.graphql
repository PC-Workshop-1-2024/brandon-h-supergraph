extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.5", import: ["@key", "@authenticated", "@requiresScopes", "@tag", "@shareable"])

type Query {
  """
  Get a specific order by id. Meant to be used for a detailed view of an order
  """
  order(id: ID!): Order 
  orderUnauthenticated(id: ID!): Order
}

"""
Returns information about a specific purchase
"""
type Order @key(fields: "id") {
  """
  Each order has a unique id which is separate from the user or items they bought
  """
  id: ID!

  """
  The user who made the purchase
  """
  buyer: User! @requiresScopes(scopes: [["order:buyer"]])

  """
  A list of all the items they purchased. This is the Variants, not the Products so we know exactly which
  product and which size/color/feature was bought
  """
  items: [ProductVariant!]! @requiresScopes(scopes: [["order:items"]])

  """
  No batching or memoization
  """
  metadataN1: [Metadata]

  """
  Dataloader memoizing the requests no batching
  """
  metadataMemoOnly: [Metadata]

  """
  Dataloader and batching the request to our mock service
  """
  metadataBatched: [Metadata]

  """
  The total cost of the order
  """
  total: Float

  """
  The date the order was made
  """
  orderDate: String

  example: String!
}

type Metadata {
  id: ID!
  taxClass: String
  shippingClass: String
}

type User @key(fields: "id") {
  id: ID!
  phone: String @tag(name: "private") @shareable
  email: String! @tag(name: "private") @shareable
}

type ProductVariant @key(fields: "id", resolvable: false) {
  id: ID!
}
